{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8d07c933",
   "metadata": {},
   "source": [
    "# Term conversion\n",
    "\n",
    "$$\\alpha_0 =\\frac{a_0}{RT}= -1+\\ln\\frac{\\rho T}{\\rho_0T_0}+\\frac{h_0^0}{RT}-\\frac{s_0^0}{R}+\\frac{1}{RT}\\int_{T_0}^T c_p^0(T)dT-\\frac{1}{R}\\int_{T_0}^T \\frac{c_p^0(T)}{T}dT$$\n",
    "\n",
    "$$\\alpha_0 =\\frac{a_0}{RT}= \\ln(\\rho) + \\ln(T)-\\ln(\\rho_0T_0)-1+\\frac{h_0^0}{RT}-\\frac{s_0^0}{R}+\\frac{1}{RT}\\int_{T_0}^T c_p^0(T)dT-\\frac{1}{R}\\int_{T_0}^T \\frac{c_p^0(T)}{T}dT$$\n",
    "\n",
    "You can set the values of $h_0^0$ and $h_0^0$ to any value, including zero. So if you are converting a term from $c_p^0/R$, then you could do\n",
    "\n",
    "$$\\alpha_0 =\\frac{a_0}{RT}= \\ln(\\rho) + \\ln(T)-\\ln(\\rho_0T_0)-1+\\frac{1}{RT}\\int_{T_0}^T c_p^0(T)dT-\\frac{1}{R}\\int_{T_0}^T \\frac{c_p^0(T)}{T}dT$$\n",
    "\n",
    "## From CP0\n",
    "\n",
    "Terms obtained in the form of contributions to $c_p^0/R$.\n",
    "\n",
    "### Constant term\n",
    "A constant term of the form\n",
    "\n",
    "$$\n",
    "c_p^0/R=c\n",
    "$$\n",
    "\n",
    "yields a contribution of \n",
    "\n",
    "$$\\frac{c(T-T_0)}{T}-c\\log\\left(\\frac{T}{T_0}\\right)$$\n",
    "\n",
    "### Power term\n",
    "A power term of the form\n",
    "$$\n",
    "c_p^0/R=cT^t, t \\neq 0,t\\neq -1\n",
    "$$\n",
    "\n",
    "yields a contribution of\n",
    "\n",
    "$$ cT^{t}\\left(\\frac{1}{t+1}-\\frac{1}{t}\\right)-c\\frac{T_0^{t+1}}{T(t+1)}+c\\frac{T_0^t}{t}$$ \n",
    "\n",
    "\n",
    "### Planck-Einstein term \n",
    "\n",
    "A term of the form\n",
    "\n",
    "$$c_p^0/R=\\sum_k {{a_k}\\dfrac{{{{\\left( {{b_k}/T} \\right)}^2}\\exp \\left( {{b_k}/T} \\right)}}{{{{\\left( {\\exp \\left( {{b_k}/T} \\right) - 1} \\right)}^2}}}}$$\n",
    "\n",
    "yields a contribution of\n",
    "\n",
    "$$\\sum_k {{a_k}\\ln \\left[ {1 - \\exp \\left( {\\frac{{ - {\\theta_k} }}{{{T}}}} \\right)} \\right]}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "426a7d66",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T22:13:47.563339Z",
     "iopub.status.busy": "2024-01-04T22:13:47.563168Z",
     "iopub.status.idle": "2024-01-04T22:13:47.633911Z",
     "shell.execute_reply": "2024-01-04T22:13:47.633413Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0.18.0'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import teqp, os, numpy as np\n",
    "teqp.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "98ec7c7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-04T22:13:47.637484Z",
     "iopub.status.busy": "2024-01-04T22:13:47.636576Z",
     "iopub.status.idle": "2024-01-04T22:13:47.646446Z",
     "shell.execute_reply": "2024-01-04T22:13:47.645992Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7.863830967842212"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "path = teqp.get_datapath()+'/dev/fluids/n-Propane.json'\n",
    "os.path.exists(path)\n",
    "jig = teqp.convert_CoolProp_idealgas(path, 0)\n",
    "aig = teqp.IdealHelmholtz([jig])\n",
    "-aig.get_Ar20(300, 3, np.array([1.0]))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
